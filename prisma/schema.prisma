generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum DocumentTypeEnum {
  CPF
  CNPJ
}

enum RoleEnum {
  ADMIN
  SUPER
  USER
}

enum SubscriptionEnum {
  ACTIVE
  CANCELED
  PAST_DUE
}

model User {
  id               String           @id @default(auto()) @map("_id") @db.ObjectId
  stripeCustomerId String?
  name             String
  document         String           @unique
  documentType     DocumentTypeEnum
  email            String           @unique
  phone            String
  password         String
  code             String?          @unique
  role             RoleEnum         @default(USER)

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  UserSecret   UserSecret[]
  Instance     Instance[]
  Subscription Subscription[]

  @@map("users")
}

model UserSecret {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique @db.ObjectId
  secret String

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user_secrets")
}

model PreRegister {
  id           String           @id @default(auto()) @map("_id") @db.ObjectId
  documentType DocumentTypeEnum
  document     String           @unique
  email        String           @unique
  name         String
  phone        String
  password     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("pre_registers")
}

model Instance {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  sessionId String @unique
  userId    String @db.ObjectId
  authPath  String

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("instances")
}

model Plan {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  instanceLimit Int?
  priceId       String?
  price         Int

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Subscription Subscription[]

  @@map("plans")
}

model Subscription {
  id                   String           @id @default(auto()) @map("_id") @db.ObjectId
  userId               String           @db.ObjectId
  planId               String           @db.ObjectId
  stripeSubscriptionId String
  status               SubscriptionEnum
  startedAt            DateTime
  currentPeriodEnd     DateTime

  user User @relation(fields: [userId], references: [id])
  plan Plan @relation(fields: [planId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("subscriptions")
}
